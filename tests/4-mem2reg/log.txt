==========../testcases_general//1-return.cminus==========
ret void
ret void
0								0
==========../testcases_general//2-decl_int.cminus==========
% = alloca i32
ret void
% = alloca i32
ret void
0								0
==========../testcases_general//3-decl_float.cminus==========
% = alloca float
ret void
% = alloca float
ret void
0								0
==========../testcases_general//4-decl_int_array.cminus==========
% = alloca [10 x i32]
ret void
% = alloca [10 x i32]
ret void
0								0
==========../testcases_general//5-decl_float_array.cminus==========
% = alloca [10 x float]
ret void
% = alloca [10 x float]
ret void
0								0
==========../testcases_general//6-num_add_int.cminus==========
% = alloca i32
% = add i32 1000, 234
% = icmp ne i32 %, 0
% = load i32, i32* %
% = icmp ne i32 %, 0
ret i32 %
% = alloca i32
% = add i32 1000, 234
% = icmp ne i32 %, 0
% = load i32, i32* %
% = icmp ne i32 %, 0
ret i32 %
210								210
==========../testcases_general//7-assign_int_var_local.cminus==========
% = alloca i32
% = icmp ne i32 1234, 0
% = load i32, i32* %
% = icmp ne i32 1234, 0
ret i32 1234
% = alloca i32
% = icmp ne i32 1234, 0
% = load i32, i32* %
% = icmp ne i32 1234, 0
ret i32 1234
210								210
==========../testcases_general//8-assign_int_array_local.cminus==========
call void @neg_idx_except()
br label %
call void @neg_idx_except()
br label %
% = getelementptr [10 x i32], [10 x i32]* %, i32 0, i32 3
% = load i32, i32* %
% = icmp ne i32 1234, 0
ret i32 1234
% = getelementptr [10 x i32], [10 x i32]* %, i32 0, i32 3
% = icmp ne i32 1234, 0
% = icmp ne i32 3, 0
% = icmp sle i32 3, 0
br i1 %, label %, label %
% = alloca [10 x i32]
% = icmp ne i32 3, 0
% = icmp sle i32 3, 0
br i1 %, label %, label %
call void @neg_idx_except()
br label %
call void @neg_idx_except()
br label %
% = getelementptr [10 x i32], [10 x i32]* %, i32 0, i32 3
% = load i32, i32* %
% = icmp ne i32 1234, 0
ret i32 1234
% = getelementptr [10 x i32], [10 x i32]* %, i32 0, i32 3
% = icmp ne i32 1234, 0
% = icmp ne i32 3, 0
% = icmp sle i32 3, 0
br i1 %, label %, label %
% = alloca [10 x i32]
% = icmp ne i32 3, 0
% = icmp sle i32 3, 0
br i1 %, label %, label %
210								210
==========../testcases_general//9-assign_cast.cminus==========
% = alloca i32
% = alloca i32
% = icmp slt i32 1, 3
% = zext i1 % to i32
% = sitofp i32 2 to float
% = fadd float %, 0x4003333340000000
% = fcmp une float %, 0x0
% = fptosi float % to i32
% = load i32, i32* %
% = load i32, i32* %
% = add i32 %, %
% = icmp ne i32 %, 0
ret i32 %
% = alloca i32
% = alloca i32
% = icmp slt i32 1, 3
% = zext i1 % to i32
% = sitofp i32 2 to float
% = fadd float %, 0x4003333340000000
% = fcmp une float %, 0x0
% = fptosi float % to i32
% = load i32, i32* %
% = load i32, i32* %
% = add i32 %, %
% = icmp ne i32 %, 0
ret i32 %
5								5
==========../testcases_general//10-funcall.cminus==========
% = alloca i32
ret void
% = alloca i32
% = icmp ne i32 10, 0
% = load i32, i32* %
% = icmp ne i32 10, 0
call void @test(i32 10)
ret void
% = alloca i32
ret void
% = alloca i32
% = icmp ne i32 10, 0
% = load i32, i32* %
% = icmp ne i32 10, 0
call void @test(i32 10)
ret void
0								0
==========../testcases_general//11-funcall_chain.cminus==========
% = alloca i32
% = load i32, i32* %
% = add i32 %, 1
% = icmp ne i32 %, 0
ret i32 %
% = alloca i32
% = icmp ne i32 1230, 0
% = call i32 @addone(i32 1230)
% = icmp ne i32 %, 0
% = call i32 @addone(i32 %)
% = icmp ne i32 %, 0
% = call i32 @addone(i32 %)
% = icmp ne i32 %, 0
% = call i32 @addone(i32 %)
% = icmp ne i32 %, 0
% = load i32, i32* %
% = icmp ne i32 %, 0
ret i32 %
% = alloca i32
% = load i32, i32* %
% = add i32 %, 1
% = icmp ne i32 %, 0
ret i32 %
% = alloca i32
% = icmp ne i32 1230, 0
% = call i32 @addone(i32 1230)
% = icmp ne i32 %, 0
% = call i32 @addone(i32 %)
% = icmp ne i32 %, 0
% = call i32 @addone(i32 %)
% = icmp ne i32 %, 0
% = call i32 @addone(i32 %)
% = icmp ne i32 %, 0
% = load i32, i32* %
% = icmp ne i32 %, 0
ret i32 %
210								210
==========../testcases_general//12-funcall_recursion.cminus==========
% = icmp ne i32 1, 0
ret i32 1
% = load i32, i32* %
% = load i32, i32* %
% = sub i32 %, 1
% = icmp ne i32 %, 0
% = call i32 @factorial(i32 %)
% = mul i32 %, %
% = icmp ne i32 %, 0
ret i32 %
% = alloca i32
% = load i32, i32* %
% = icmp eq i32 %, 0
% = zext i1 % to i32
br i1 %, label %, label %
% = alloca i32
% = icmp ne i32 10, 0
% = call i32 @factorial(i32 10)
% = icmp ne i32 %, 0
% = load i32, i32* %
% = icmp ne i32 %, 0
ret i32 %
% = icmp ne i32 1, 0
ret i32 1
% = load i32, i32* %
% = load i32, i32* %
% = sub i32 %, 1
% = icmp ne i32 %, 0
% = call i32 @factorial(i32 %)
% = mul i32 %, %
% = icmp ne i32 %, 0
ret i32 %
% = alloca i32
% = load i32, i32* %
% = icmp eq i32 %, 0
% = zext i1 % to i32
br i1 %, label %, label %
% = alloca i32
% = icmp ne i32 10, 0
% = call i32 @factorial(i32 10)
% = icmp ne i32 %, 0
% = load i32, i32* %
% = icmp ne i32 %, 0
ret i32 %
0								0
==========../testcases_general//13-if_stmt.cminus==========
% = icmp ne i32 3, 0
store i32 3, i32* %
br label %
br label %
% = phi i32 [ 2, %label_entry ], [ undef, % ], [ undef, % ]
% = icmp ne i32 4, 0
store i32 4, i32* %
ret void
% = alloca i32
% = icmp ne i32 2, 0
% = load i32, i32* %
% = icmp ne i32 2, 0
br i1 %, label %, label %
% = icmp ne i32 3, 0
store i32 3, i32* %
br label %
br label %
% = phi i32 [ 2, %label_entry ], [ undef, % ], [ undef, % ]
% = icmp ne i32 4, 0
store i32 4, i32* %
ret void
% = alloca i32
% = icmp ne i32 2, 0
% = load i32, i32* %
% = icmp ne i32 2, 0
br i1 %, label %, label %
0								0
==========../testcases_general//14-while_stmt.cminus==========
% = load i32, i32* %
% = sub i32* %, i32 1
% = icmp ne i32 %, 0
store i32 %, i32* %
br label %
ret void
% = phi i32 [ 10, %label_entry ], [ undef, % ]
% = load i32, i32* %
% = icmp ne i32* %, i32 0
br i1 %, label %, label %
% = alloca i32
% = icmp ne i32 10, 0
br label %
% = load i32, i32* %
% = sub i32* %, i32 1
% = icmp ne i32 %, 0
store i32 %, i32* %
br label %
ret void
% = phi i32 [ 10, %label_entry ], [ undef, % ]
% = load i32, i32* %
% = icmp ne i32* %, i32 0
br i1 %, label %, label %
% = alloca i32
% = icmp ne i32 10, 0
br label %
terminate called after throwing an instance of 'unreachable_error'
  what():  There is no requirement for phi in lab3!
==========../testcases_general//15-if_while.cminus==========
% = load i32, i32* %
% = load i32, i32* %
% = add i32* %, i32 %
% = icmp ne i32 %, 0
store i32 %, i32* %
br label %
% = load i32, i32* %
% = load i32, i32* %
% = add i32* %, i32 %
% = icmp ne i32 %, 0
store i32 %, i32* %
br label %
% = phi i32* [ %, % ], [ undef, % ], [ undef, % ]
% = phi i32 [ %, % ], [ undef, % ], [ undef, % ]
% = phi i32* [ %, % ], [ undef, % ], [ undef, % ]
br label %
% = load i32, i32* %
% = sub i32* %, i32 1
% = icmp ne i32 %, 0
store i32 %, i32* %
% = load i32, i32* %
% = icmp slt i32 %, 5
% = zext i1 % to i32
br i1 %, label %, label %
% = load i32, i32* %
% = load i32, i32* %
% = add i32* %, %
% = icmp ne i32 %, 0
ret i32 %
% = phi i32 [ 0, %label_entry ], [ undef, % ]
% = phi i32 [ 10, %label_entry ], [ undef, % ]
% = phi i32 [ 0, %label_entry ], [ undef, % ]
% = load i32, i32* %
% = icmp ne i32* %, i32 0
br i1 %, label %, label %
% = alloca i32
% = alloca i32
% = alloca i32
% = icmp ne i32 0, 0
% = icmp ne i32 0, 0
% = icmp ne i32 10, 0
br label %
% = load i32, i32* %
% = load i32, i32* %
% = add i32* %, i32 %
% = icmp ne i32 %, 0
store i32 %, i32* %
br label %
% = load i32, i32* %
% = load i32, i32* %
% = add i32* %, i32 %
% = icmp ne i32 %, 0
store i32 %, i32* %
br label %
% = phi i32* [ %, % ], [ undef, % ], [ undef, % ]
% = phi i32 [ %, % ], [ undef, % ], [ undef, % ]
% = phi i32* [ %, % ], [ undef, % ], [ undef, % ]
br label %
% = load i32, i32* %
% = sub i32* %, i32 1
% = icmp ne i32 %, 0
store i32 %, i32* %
% = load i32, i32* %
% = icmp slt i32 %, 5
% = zext i1 % to i32
br i1 %, label %, label %
% = load i32, i32* %
% = load i32, i32* %
% = add i32* %, %
% = icmp ne i32 %, 0
ret i32 %
% = phi i32 [ 0, %label_entry ], [ undef, % ]
% = phi i32 [ 10, %label_entry ], [ undef, % ]
% = phi i32 [ 0, %label_entry ], [ undef, % ]
% = load i32, i32* %
% = icmp ne i32* %, i32 0
br i1 %, label %, label %
% = alloca i32
% = alloca i32
% = alloca i32
% = icmp ne i32 0, 0
% = icmp ne i32 0, 0
% = icmp ne i32 10, 0
br label %
terminate called after throwing an instance of 'unreachable_error'
  what():  There is no requirement for phi in lab3!
==========../testcases_general//16-if_chain.cminus==========
